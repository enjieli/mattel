"0","# Create training and testing feature model matrices and response vectors."
"0","# we use model.matrix(...)[, -1] to discard the intercept"
"0","train_x <- model.matrix(SalePrice ~ ., train)[, -1]"
"0","train_y <- log(train$SalePrice)"
"0","test_x <- model.matrix(SalePrice ~ ., test)[, -1]"
"0","test_y <- log(test$SalePrice)"
"0","# Apply CV Ridge regression to ames data"
"0","cv_ridge <- cv.glmnet(x = train_x,y = train_y, alpha = 0)"
"0","ridge_coefs <- coef(cv_ridge) "
"0","ridge_coef_frame <- "
"0","  data.frame(ridge_coefs = rownames(ridge_coefs)[-1],value = ridge_coefs[-1,1]) %>%"
"0","  filter(value != 0) %>%"
"0","  top_n(30, wt = abs(value)) "
"0","ridge_coef_frame_plot <- "
"0","  ggplot(ridge_coef_frame, aes(x=reorder(ridge_coefs,value), y=value, color= value > 0)) + "
"0","  geom_pointrange(aes(ymin=0, ymax=value),show.legend = FALSE) + "
"0","  ggtitle(""Coefficients of ridge model"") + "
"0","  coord_flip() +"
"0","  ylab(""Coefficient"") +"
"0","  xlab(NULL) +"
"0","  theme(plot.title = element_text(hjust = 0.5))"
"0","# Apply CV lasso regression to ames data"
"0","cv_lasso <- cv.glmnet(x = train_x, y = train_y,alpha = 1)"
"0","lasso_coefs <- coef(cv_lasso) "
"0","lasso_coef_frame <- "
"0","  data.frame(lasso_coefs = rownames(lasso_coefs)[-1],value = lasso_coefs[-1,1]) %>%"
"0","  filter(value != 0)"
"0","  "
"0","lasso_coef_frame_plot <- "
"0","  ggplot(lasso_coef_frame, aes(x=reorder(lasso_coefs,value), y=value, color= value > 0)) + "
"0","  geom_pointrange(aes(ymin=0, ymax=value),show.legend = FALSE) + "
"0","  ggtitle(""Coefficients of lasso model"") + "
"0","  coord_flip() +"
"0","  ylab(""Coefficient"") +"
"0","  xlab(NULL) +"
"0","  theme(plot.title = element_text(hjust = 0.5))"
"0","# predict"
"0","lasso_pred <- predict(cv_lasso, s = cv_lasso$lambda.min, test_x)"
"0","ridge_pred <- predict(cv_ridge, s = cv_ridge$lambda.min, test_x)"
